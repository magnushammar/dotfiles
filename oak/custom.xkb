// https://wiki.archlinux.org/title/X_keyboard_extension#Caps_hjkl_as_vimlike_arrow_keys
// About the warnings on xkb_compatibility
// Yeah, that's fine. we've started adding high keycodes to xkeyboard-config because
// we can finally handle them on wayland. but the same maps are used under X where we can't
// hence the warning. It's just a warning, no functional changes (those keycodes were never available anyway).

xkb_keymap {
xkb_keycodes { include "evdev+aliases(qwerty)" };

xkb_types "cust_caps_types" {
    include "complete"
    type "CUST_CAPSLOCK" {
        modifiers= Shift+Lock;
        map[Shift] = Level2;            //maps shift and no Lock. Shift+Alt goes here, too, because Alt isn't in modifiers.
        map[Lock] = Level3;
        map[Shift+Lock] = Level3;       //maps shift and Lock. Shift+Lock+Alt goes here, too.
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
        level_name[Level3]= "Lock";
    };
};

xkb_compatibility "cust_caps_compatibility" {
    include "complete"

    override interpret Caps_Lock+AnyOfOrNone(all) {
        action= SetMods(modifiers=Lock);
    };
};

xkb_symbols "cust_caps_symbols" {
    include "pc+se+inet(evdev)"         //SWEDISH

    name[group1]="Custom Caps Lock Keys";

    override key <AD06> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [               y,               Y,           Escape ],
        actions[Group1]= [      NoAction(),      NoAction(),   RedirectKey(keycode=<ESC>, clearmods=Lock) ]
    };
    override key  <TLDE> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ Escape, paragraph, paragraph ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=<TLDE>, clearmods=Lock) ]
    };
    override key  <AE12> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ backslash, dead_grave, grave ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=<AE12>, clearmods=Lock) ]
    };
    // override key  <AB10> {
    //     type= "CUST_CAPSLOCK",
    //     symbols[Group1]= [ minus, underscore, grave ],
    //     actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=<grave>, clearmods=Lock) ]
    // };
    override key  <AB07> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ m, M, less ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=0, clearmods=Lock) ]
    };
    override key  <AB08> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ comma, semicolon, bar ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=0, clearmods=Lock) ]
    };
    override key  <AB09> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ period, colon, greater ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=0, clearmods=Lock) ]
    };
    override key  <AE10> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ 0, equal, braceright ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=0, clearmods=Lock) ]
    };
    override key  <AE09> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ 9, parenright, bracketright ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=0, clearmods=Lock) ]
    };
    override key  <AE08> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ 8, parenleft, bracketleft ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=0, clearmods=Lock) ]
    };
    override key <AE07> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [7, slash, braceleft ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=0, clearmods=Lock) ]
    };
    override key <AD07> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [               u,               U,            BackSpace ],
        actions[Group1]= [ RedirectKey(keycode=14, clearmods=Lock)    , RedirectKey(keycode=14, clearmods=Lock)    ,   RedirectKey(keycode=14, clearmods=Lock) ]
    };

    override key <AD09> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [ o, O, Delete ],
        actions[Group1]= [ NoAction(), NoAction(), RedirectKey(keycode=<DELE>, clearmods=Lock) ]
    };
    override key <AC10> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [      odiaeresis,      Odiaeresis,             End ],
        actions[Group1]= [      NoAction(),      NoAction(),   RedirectKey(keycode=<END>, clearmods=Lock) ]
    };
    override key <AD08> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [               i,               I,            Up ],
        actions[Group1]= [      NoAction(),      NoAction(),   RedirectKey(keycode=<UP>, clearmods=Lock) ]
    };
    override key <AC06> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [               h,               H,            Home ],
        actions[Group1]= [      NoAction(),      NoAction(),   RedirectKey(keycode=<HOME>, clearmods=Lock) ]
    };
    override key <AC07> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [               j,               J,            Left ],
        actions[Group1]= [      NoAction(),      NoAction(),   RedirectKey(keycode=<LEFT>, clearmods=Lock) ]
    };
    override key <AC08> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [               k,               K,              Down ],
        actions[Group1]= [      NoAction(),      NoAction(),   RedirectKey(keycode=<DOWN>, clearmods=Lock) ]
    };
    override key <AC09> {
        type= "CUST_CAPSLOCK",
        symbols[Group1]= [               l,               L,           Right ],
        actions[Group1]= [      NoAction(),      NoAction(),   RedirectKey(keycode=<RGHT>, clearmods=Lock) ]
    };
    override key <I255> {         [       Multi_Key ] };
};

xkb_geometry { include "pc(pc105)" };

};